!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ZapierStoreClient={})}(this,function(e){"use strict";function t(e){if(!e||"string"!=typeof e)throw console.error("ZapierStoreClient Error: Key must be a non-empty string"),new Error("Key must be a non-empty string");if(e.length>32)throw console.error(`ZapierStoreClient Error: Key too long (${e.length} chars), max 32`),new Error("Key must be 32 characters or less")}function r(e){if(!e||"string"!=typeof e)throw console.error("ZapierStoreClient Error: Field must be a non-empty string"),new Error("Field must be a non-empty string")}function n(e){let t;try{t=JSON.stringify(e)}catch(e){throw console.error("ZapierStoreClient Error: Value not JSON serializable",e),new Error("Value must be JSON serializable")}if(t.length>2500)throw console.error(`ZapierStoreClient Error: Value too large (${t.length} bytes), max 2500`),new Error("Value must be under 2500 bytes when JSON serialized")}function o(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&"[object Object]"===Object.prototype.toString.call(e)}function a(e,r){if(t(e),!Array.isArray(r)||0===r.length)throw console.error("ZapierStoreClient Error: List push requires at least one value"),new Error("List push requires at least one value");r.forEach((e,t)=>{try{n(e)}catch(e){console.error(`ZapierStoreClient Error: Invalid value at index ${t}`);const r=e instanceof Error?e.message:"Unknown error";throw new Error(`Invalid value at index ${t}: ${r}`)}})}function i(e){t(e)}function s(e,r=1){t(e),function(e){if("number"!=typeof e||!Number.isFinite(e))throw console.error("ZapierStoreClient Error: Increment amount must be a finite number"),new Error("Increment amount must be a finite number")}(r)}function l(e,t){if(!t||0===Object.keys(t).length)return e;const r=function(e){const t=new URLSearchParams;return Object.entries(e).forEach(([e,r])=>{Array.isArray(r)?r.forEach(r=>{t.append(`${e}[]`,String(r))}):null!=r&&t.append(e,String(r))}),t.toString()}(t);return r?`${e}?${r}`:e}const u={keyCount:"__zapier_client_key_count__",keySet:"__zapier_client_keys__"};function c(e,r){return{set:async function(o,a){!function(e,r){t(e),n(r)}(o,a),await r.trackKey(o);const i={[o]:a};await e.request({method:"POST",body:JSON.stringify(i)})},get:async function(r){!function(e){t(e)}(r);const n=await e.request({params:{key:[r]}});if(!n||void 0===n[r])return null;const o=n[r];return o&&"object"==typeof o&&!Array.isArray(o)&&"list"in o?o.list:o}}}function y(e,a){async function i(o,i,s){!function(e,o,a){t(e),r(o),n(a)}(o,i,s),await a.trackKey(o);const l={action:"set_child_value",data:{key:o,values:{[i]:s}}};await e.request({method:"PATCH",body:JSON.stringify(l)})}async function s(n,a){!function(e,n){t(e),r(n)}(n,a);const i=await e.request({params:{key:[n]}});if(!i||void 0===i[n])return null;const s=i[n];return o(s)?void 0!==s[a]?s[a]:null:(console.error(`ZapierStoreClient Error: Key '${n}' is not a hash (got ${typeof s})`),null)}async function l(r){!function(e){t(e)}(r);const n=await e.request({params:{key:[r]}});if(!n||void 0===n[r])return null;const a=n[r];return o(a)?a:(console.error(`ZapierStoreClient Error: Key '${r}' is not a hash (got ${typeof a})`),null)}async function u(n,o){!function(e,n){t(e),r(n)}(n,o);const a={action:"remove_child_value",data:{key:n,keys:[o]}};await e.request({method:"PATCH",body:JSON.stringify(a)})}return{hset:i,hget:s,hgetall:l,hdel:u,hSet:i,hGet:s,hGetAll:l,hDel:u}}function h(e,r){return{del:async function(n){!function(e){t(e)}(n),await r.untrackKey(n);const o={[n]:null};await e.request({method:"POST",body:JSON.stringify(o)})},clear:async function(){await e.request({method:"DELETE"}),await e.setMany({[u.keySet]:{},[u.keyCount]:0})}}}function f(e){!function(e){if(!e)throw console.error("ZapierStoreClient Error: Secret is required"),new Error("Secret is required - provide a valid UUID");const t=String(e);if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(t))throw console.error(`ZapierStoreClient Error: Invalid UUID format - received: ${t}`),new Error("Secret must be a valid UUID (36 characters with hyphens). Example: 550e8400-e29b-41d4-a716-446655440000")}(e);const t=function(e){return{request:async function(t={}){const{params:r,...n}=t,o=l("https://store.zapier.com/api/records",r),a=function(e,t={}){const r={"Content-Type":"application/json","X-Secret":e,...t.headers},n={method:t.method||"GET",headers:r};return t.body&&(n.body=t.body),n}(e,n);try{const e=await fetch(o,a),t=await e.json();if("object"==typeof t&&null!==t&&!Array.isArray(t)&&"error"in t&&t.error&&e.status>=400){const r="string"==typeof t.error?t.error:"Unknown API error";throw console.error(`ZapierStoreClient API Error (${e.status}):`,r),new Error(r)}return t}catch(e){if(e instanceof Error)throw console.error("ZapierStoreClient Request Error:",e.message),e;throw console.error("ZapierStoreClient Unexpected Error:",e),new Error("Unexpected error during API request")}}}}(e),r=function(e){return{...e,getMany:async t=>0===t.length?{}:await e.request({params:{key:t}})||{},async setMany(t){0!==Object.keys(t).length&&await e.request({method:"POST",body:JSON.stringify(t)})},async incr(t,r){const n={action:"increment_by",data:{key:t,amount:r}};return await e.request({method:"PATCH",body:JSON.stringify(n)})},getAll:async()=>await e.request({})||{}}}(t),n=function(e){let t=!1;return{async initialize(){if(!t)try{const r=await e.getAll(),n=Object.keys(r).filter(e=>!Object.values(u).includes(e)),o={};n.forEach(e=>{o[e]=!0});const a=n.length;await e.setMany({[u.keySet]:o,[u.keyCount]:a}),t=!0}catch{await e.setMany({[u.keySet]:{},[u.keyCount]:0}),t=!0}},async trackKey(t){if(await this.initialize(),await this.hasKey(t))return;const r=await this.getKeyCount();if(r>=500)throw new Error(`Key limit exceeded: Cannot add key "${t}". Maximum 500 keys allowed, currently have ${r} keys.`);const n=(await e.getMany([u.keySet]))[u.keySet]||{};n[t]=!0,await Promise.all([e.setMany({[u.keySet]:n}),e.incr(u.keyCount,1)])},async untrackKey(t){if(await this.initialize(),!await this.hasKey(t))return;const r=(await e.getMany([u.keySet]))[u.keySet]||{};delete r[t],await Promise.all([e.setMany({[u.keySet]:r}),e.incr(u.keyCount,-1)])},async getKeyCount(){await this.initialize();try{const t=(await e.getMany([u.keyCount]))[u.keyCount];return"number"==typeof t?Math.max(0,t):0}catch{return 0}},async hasKey(t){await this.initialize();try{const r=(await e.getMany([u.keySet]))[u.keySet]||{};return Boolean(r[t])}catch{return!1}}}}(r),o=c(r,n),f=function(e,t){async function r(r,...n){if(0===n.length)throw console.error("ZapierStoreClient Error: lpush requires at least one value"),new Error("lpush requires at least one value");let o;if(1===n.length&&Array.isArray(n[0]))o=n[0];else{if(!(n.length>=1)||Array.isArray(n[0]))throw console.error("ZapierStoreClient Error: Invalid lpush arguments - use either lpush(key, ...values) or lpush(key, [values])"),new Error("Invalid lpush arguments: use either lpush(key, ...values) or lpush(key, [values])");o=n}a(r,o),await t.trackKey(r);for(const t of o){const n={action:"list_push",data:{key:r,value:t,location:"head"}};await e.request({method:"PATCH",body:JSON.stringify(n)})}return o.length}async function n(t){i(t);const r={action:"list_pop",data:{key:t,location:"head"}};try{const t=await e.request({method:"PATCH",body:JSON.stringify(r)});return void 0!==t?t:null}catch(e){if(e instanceof Error&&"list is empty"===e.message)return null;throw e}}async function o(r,...n){if(0===n.length)throw console.error("ZapierStoreClient Error: rpush requires at least one value"),new Error("rpush requires at least one value");let o;if(1===n.length&&Array.isArray(n[0]))o=n[0];else{if(!(n.length>=1)||Array.isArray(n[0]))throw console.error("ZapierStoreClient Error: Invalid rpush arguments - use either rpush(key, ...values) or rpush(key, [values])"),new Error("Invalid rpush arguments: use either rpush(key, ...values) or rpush(key, [values])");o=n}a(r,o),await t.trackKey(r);for(const t of o){const n={action:"list_push",data:{key:r,value:t,location:"tail"}};await e.request({method:"PATCH",body:JSON.stringify(n)})}return o.length}async function s(t){i(t);const r={action:"list_pop",data:{key:t,location:"tail"}};try{const t=await e.request({method:"PATCH",body:JSON.stringify(r)});return void 0!==t?t:null}catch(e){if(e instanceof Error&&"list is empty"===e.message)return null;throw e}}return{lpush:r,lpop:n,rpush:o,rpop:s,lPush:r,lPop:n,rPush:o,rPop:s}}(r,n),p=y(r,n),d=function(e){async function t(t,r){s(t,r);const n={action:"increment_by",data:{key:t,amount:r}};return await e.request({method:"PATCH",body:JSON.stringify(n)})}return{incr:async function(e){return t(e,1)},incrBy:t}}(t),w=h(r,n);return{keyTracker:{getKeyCount:n.getKeyCount.bind(n),hasKey:n.hasKey.bind(n)},set:o.set,get:o.get,lpush:f.lpush,lpop:f.lpop,rpush:f.rpush,rpop:f.rpop,lPush:f.lPush,lPop:f.lPop,rPush:f.rPush,rPop:f.rPop,hset:p.hset,hget:p.hget,hgetall:p.hgetall,hdel:p.hdel,hSet:p.hSet,hGet:p.hGet,hGetAll:p.hGetAll,hDel:p.hDel,incr:d.incr,incrBy:d.incrBy,del:w.del,clear:w.clear}}var p={createZapierStoreClient:f};e.createZapierStoreClient=f,e.default=p,Object.defineProperty(e,"__esModule",{value:!0})});
